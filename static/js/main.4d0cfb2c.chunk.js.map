{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","removeInput","index","items","state","splice","setState","handleChange","event","target","value","handleSizeChange","stringValue","parseInt","teamSize","isNaN","undefined","addInput","push","name","idea","getOutput","openDialog","length","axios","join","then","d","data","filepath","imageName","names","relatedness","text","title","arguments","dialogOpened","dialogText","dialogTitle","closeDialog","_this2","classes","react_default","a","createElement","className","root","index_es","position","variant","color","grow","body","label","defaultValue","teamSizeInput","onChange","margin","table","map","item","key","textField","removeButton","onClick","Delete_default","Math","round","addButton","Add_default","plotButton","image","src","alt","image2","open","onClose","aria-labelledby","aria-describedby","id","varient","autoFocus","React","Component","withStyles","theme","flexGrow","padding","maxWidth","right","left","float","marginLeft","spacing","unit","marginRight","width","height","fontSize","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4d0cfb2c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { \n\tAppBar, \n\tToolbar, \n\tTypography, \n\tTextField, \n\tTable, TableBody, TableCell, TableRow, \n\tIconButton, Button,\n\tDialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport * as axios from 'axios';\n\nconst styles = (theme) => ({\n\troot: {\n\t\tflexGrow: 1,\n\t},\n\tgrow: {\n\t\tflexGrow: 1,\n\t},\n\tbody: {\n\t\tpadding: 20,\n\t\tmaxWidth: 700,\n\t\tmargin: \"0 auto\",\n\t\tright: 0, left: 0,\n\t},\n\ttable: {\n\t\tmaxWidth: 700,\n\t},\n\tremoveButton: {\n\t\tfloat: \"right\",\n\t},\n\ttextField: {\n\t\tmarginLeft: theme.spacing.unit,\n\t\tmarginRight: theme.spacing.unit,\n\t\twidth: \"100%\",\n\t},\n\taddButton: {\n\t\t// float: \"right\",\n\t},\n\tplotButton: {\n\t\tmargin: 5,\n\t},\n\timage: {\n\t\theight: 500,\n\t\twidth: 1000,\n\t},\n\timage2: {\n\t\theight: 500,\n\t\twidth: 1000,\n\t},\n\trelatedness: {\n\t\tfontSize: 18,\n\t\tpadding: 20,\n\t}\n});\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdialogTitle: \"\",\n\t\t\tdialogText: \"\",\n\t\t\tdialogOpened: false,\n\t\t\tteamSize: 2,\n\t\t\titems: [{name: \"\", idea: \"\"}, {name: \"\", idea: \"\"}],\n\t\t\timageName: \"\",\n\t\t\tnames: [],\n\t\t\trelatedness: null,\n\t\t};\n\t}\n\trender () {\n\t\tconst { classes } = this.props;\n\t\treturn (\n\t\t\t<div className={classes.root}>\n\t\t\t\t<AppBar position=\"static\">\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n\t\t\t\t\t\t\tScholar Match\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t\t<div className={classes.body}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tlabel=\"Team Size\"\n\t\t\t\t\t\tdefaultValue={this.state.teamSize}\n\t\t\t\t\t\tclassName={classes.teamSizeInput}\n\t\t\t\t\t\tonChange={this.handleSizeChange}\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t<Table className={classes.table}>\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t{this.state.items.map((item, index) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<TableRow key={index}>\n\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Name\"\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange(index)}\n\t\t\t\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Idea\"\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange(index)}\n\t\t\t\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<IconButton className={classes.removeButton} variant=\"outlined\" onClick={this.removeInput(index)}>\n\t\t\t\t\t\t\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t</Table>\n\t\t\t\t\t{this.state.relatedness &&\n\t\t\t\t\t\t<div className={classes.relatedness}>Relatedness: {Math.round(this.state.relatedness * 10000) / 100}%</div>}\n\t\t\t\t\t<Button className={classes.addButton} onClick={this.addInput}> <AddIcon /> Add Person</Button>\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\t<Button className={classes.plotButton} variant=\"contained\" color=\"primary\" onClick={this.getOutput}>Plot</Button>\n\t\t\t\t\t<img className={classes.image} src={this.state.imageName} alt=\" \" />\n\t\t\t\t\t<img className={classes.image2} src={this.state.imageName + \".3.svg\"} alt=\" \" />\n\t\t\t\t\t\n\t\t\t\t\t{this.state.names.map((name, index) => {\n\t\t\t\t\t\tif (index < 5)\n\t\t\t\t\t\t\treturn <div>{name}</div>\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t})}\n\t\t\t\t<div>\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Dialog\n\t\t\t\t\topen={this.state.dialogOpened}\n\t\t\t\t\tonClose={this.closeDialog}\n\t\t\t\t\taria-labelledby=\"alert-dialog-title\"\n\t\t\t\t\taria-describedby=\"alert-dialog-description\" >\n\t\t\t\t{this.state.dialogTitle.length > 0 &&\n\t\t\t\t\t<DialogTitle id=\"alert-dialog-title\">{this.state.dialogTitle}</DialogTitle>}\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<DialogContentText id=\"alert-dialog-description\">\n\t\t\t\t\t\t{this.state.dialogText}\n\t\t\t\t\t</DialogContentText>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button varient=\"contained\" onClick={this.closeDialog} autoFocus>\n\t\t\t\t\tClose\n\t\t\t\t\t</Button>\n\t\t\t\t</DialogActions>\n\t\t\t\t</Dialog>\n\t\t\t</div>\n\t\t);\n\t}\n\tremoveInput = index => () => {\n\t\tlet items = this.state.items;\n\t\titems.splice(index, 1);\n\t\tthis.setState({items});\n\t}\n\thandleChange = index => event => {\n\t\tconst items = this.state.items;\n\t\titems[index] = event.target.value;\n\t\tthis.setState({items});\n\t}\n\thandleSizeChange = event => {\n\t\tconst stringValue = event.target.value;\n\t\tconst value = parseInt(stringValue);\n\t\tthis.setState({teamSize: isNaN(value) ? undefined : value });\n\t}\n\taddInput = () => {\n\t\tconst items = this.state.items;\n\t\titems.push({name: \"\", idea: \"\"});\n\t\tthis.setState({items});\n\t}\n\tgetOutput = () => {\n\t\tif (typeof this.state.teamSize !== \"number\") {\n\t\t\tthis.openDialog(\"Team size not valid.\");\n\t\t\treturn;\n\t\t}\n\t\tif (typeof this.state.teamSize < 2) {\n\t\t\tthis.openDialog(\"Team size must be 2 or more!\");\n\t\t\treturn;\n\t\t}\n\t\tif (this.state.items.length % this.state.teamSize !== 0) {\n\t\t\tthis.openDialog(\"You must have enough people to divide into even teams!\");\n\t\t\treturn;\n\t\t}\n\t\taxios.get('http://localhost:8000/?q=' + this.state.items.join(\"+\")).then((d) => {\n\t\t\tif (d && d.data) {\n\t\t\t\tif (d.data.filepath)\n\t\t\t\t\tthis.setState({imageName: 'http://localhost:8000/' + d.data.filepath});\n\t\t\t\tif (d.data.names)\n\t\t\t\t\tthis.setState({ names: d.data.names });\n\t\t\t\tif (d.data.relatedness)\n\t\t\t\t\tthis.setState({ relatedness: d.data.relatedness });\n\t\t\t}\n\t\t});\n\t}\n\topenDialog = (text, title=\"\") => {\n\t\tthis.setState({ dialogOpened: true, dialogText: text, dialogTitle: title });\n\t}\n\tcloseDialog = () => {\n\t\tthis.setState({ dialogOpened: false });\n\t}\n}\n\nApp.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}